@page
@model MedicinaESE.Pages.Admin.ListaUsuariosModel
@{
    ViewData["Title"] = "Lista de Usuarios";
}

<div class="admin-container">
    <h1 class="admin-title">Lista de Usuarios</h1>

    <div class="table-container">
        <table class="users-table">
            <thead>
                <tr>
                    <th><input type="checkbox" id="selectAll" /></th>
                    <th class="sortable" data-column="1">ID</th>
                    <th class="sortable" data-column="2">Nombre</th>
                    <th class="sortable" data-column="3">Correo</th>
                    <th class="sortable" data-column="4">Teléfono</th>
                    <th class="sortable" data-column="5">Tipo de Usuario</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="userTableBody">
                @foreach (var usuario in Model.Usuarios)
                {
                    <tr>
                        <td><input type="checkbox" class="select-user" /></td>
                        <td>@usuario.DocumentoId</td>
                        <td>@usuario.Nombre</td>
                        <td>@usuario.Correo</td>
                        <td>@(string.IsNullOrWhiteSpace(usuario.Telefono) ? "-" : usuario.Telefono)</td>
                        <td>@usuario.TipoUsuario</td>
                        <td>
                            <button class="edit-btn">Editar</button>
                            <button class="delete-btn">Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="admin-actions">
        <button id="refreshPage" class="action-btn">Refrescar</button>
        <button id="undoChanges" class="action-btn">Deshacer cambios</button>
        <button id="saveChanges" class="action-btn action-save">Guardar todo</button>
        <button onclick="window.location.href='../admin-main'" class="action-btn action-back">Volver</button>
    </div>
</div>

@section Scripts {
    <script>
        // Actualiza la página
        document.getElementById("refreshPage").addEventListener("click", () => location.reload());

        // Seleccionar/desseleccionar todos los checkboxes
        document.getElementById("selectAll").addEventListener("change", function () {
            document.querySelectorAll(".select-user").forEach(checkbox => checkbox.checked = this.checked);
        });

        // Agregar eventos para que los encabezados ordenables ordenen la tabla.
        document.querySelectorAll(".sortable").forEach(header => {
            header.addEventListener("click", function () {
                const colIndex = parseInt(this.getAttribute("data-column"));
                sortTable(colIndex);
            });
        });

        function sortTable(colIndex) {
            const tbody = document.getElementById("userTableBody");
            const rows = Array.from(tbody.rows);
            rows.sort((a, b) => {
                const cellA = a.cells[colIndex].innerText.trim();
                const cellB = b.cells[colIndex].innerText.trim();
                return cellA.localeCompare(cellB, undefined, { numeric: true });
            });
            tbody.innerHTML = "";
            rows.forEach(row => tbody.appendChild(row));
        }
    </script>
    <!-- Scripts de jQuery para validación (si fuera necesario para extender la funcionalidad) -->
    <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.6.0.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate.unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
}
